#!/bin/sh
print_usage(){
	printf "Usage: $0 [options]\n"
	printf "  -a\tactivate chroot with specified parameters\n"
	printf "  -c\tcreate chroot with the other options\n"
	printf "  -n\tnew root (absolute path)\n"
	printf "  -m\tmount point for the root (absolute path)\n"
	printf "  -f\tuser home from where dotfiles are copied\n"
	printf "  -r\troot home from where dotfiles are copied\n"
	printf "  -p\tlist of packages to install\n"
	printf "  -u\tname of the user in the new root\n"
	printf "  -h\tshow this help\n"
}

create=0
act=0
[[ -z $0 ]] && print_usage
while getopts n:m:f:r:p:u:cah option;do
	case $option in
		a)act=1;;
		c)create=1;;
		n)newrt=$OPTARG;;
		m)mntrt=$OPTARG;;
		f)homef=$OPTARG;;
		r)rootf=$OPTARG;;
		p)pkgs=$OPTARG;;
		u)usernr=$OPTARG;;
		h)print_usage;exit 0;;
		?)exit 1;;
	esac
done
newrt=${newrt:="$HOME/chrrr"}
mntrt=${mntrt:="$HOME/plip_chr"}
homef=${homef:="$HOME/linux-custom-scripts/chroot_stuff/users/koray"}
rootf=${rootf:="$HOME/linux-custom-scripts/chroot_stuff/users/root"}
pkgs=${pkgs:=('git' 'vim' 'zsh')}
pkgs=${pkgs#\(}
pkgs=${pkgs%\)}
usernr=${usernr:="koray"}
echo $newrt
echo $mntrt
echo $homef
echo $rootf
echo $pkgs
echo $usernr
printf "5 seconds timeout, press Control-C to cancel"
sleep 5
if [ $create -eq 1 ];then
	if [ ! -d $newrt ];then
		printf "New root folder doesn't exist, create it [y/n]? "
		read ans
		if [ "$ans" = "y" ];then
			mkdir -p $newrt
		fi
	fi
	sudo pacstrap $newrt base $pkgs
	sudo mount --bind "$newrt" "$mntrt"
	sudo arch-chroot $mntrt -c "useradd -m $usernr"
	cp -r "$homef/*" "$homef/.*" "$newrt/home/$usernr/"
	cp -r "$rootf/*" "$rootf/.*" "$newrt/root/"
fi
if [ $act -eq 1 ];then
	sudo mount --bind "$newrt" "$mntrt"
	sudo arch-chroot $mntrt /bin/zsh -c "su -l $usernr"
	sudo umount --recursive $mntrt
fi
