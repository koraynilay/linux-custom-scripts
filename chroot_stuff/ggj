#!/bin/sh
needcreactiv='(Needed for chroot enviroment creation and activation)'
needcreate='(Needed for chroot enviroment creation only)'
print_usage(){
	printf "Usage: $0 [options]\n"
	printf "  -a\tactivate chroot with specified parameters\n"
	printf "  -c\tcreate chroot with the other options\n"
	printf "  -n\tnew root (absolute path) $needcreactiv\n"
	printf "  -m\tmount point for the root (absolute path) $needcreactiv\n"
	printf "  -f\tuser home from where dotfiles are copied $needcreate\n"
	printf "  -r\troot home from where dotfiles are copied $needcreate\n"
	printf "  -p\tlist of packages to install\n"
	printf "  -s\tscript to execute right after creation of the chroot\n"
	printf "  -z\tzsh theme file\n"
	printf "  -u\tname of the user in the new root $needcreactiv\n"
	printf "  -v\tprint variables\n"
	printf "  -h\tshow this help\n"
}

act=0
create=0
verbose=0
while getopts n:m:f:r:p:u:z:s:cahv option;do
	case $option in
		a)act=1;;
		c)create=1;;
		v)verbose=1;;
		n)newrt=$OPTARG;;
		m)mntrt=$OPTARG;;
		f)homef=$OPTARG;;
		r)rootf=$OPTARG;;
		p)pkgs=$OPTARG;;
		u)usernr=$OPTARG;;
		s)script=$OPTARG;;
		z)zsh_theme=$OPTARG;;
		h)print_usage;exit 0;;
		?)exit 1;;
	esac
done
[[ -z $1 ]] && print_usage && exit 3
#echo $UID
[[ $UID -ne 0 ]] && printf "This script needs root privileges.\n" && exit 5
export newrt=${newrt:="$HOME/chrrr"}
export mntrt=${mntrt:="$HOME/plip_chr"}
export homef=${homef:="$HOME/linux-custom-scripts/chroot_stuff/users/koray"}
export rootf=${rootf:="$HOME/linux-custom-scripts/chroot_stuff/users/root"}
export script=${script:="$HOME/linux-custom-scripts/chroot_stuff/init_chroot.sh"}
export pkgs=${pkgs:=('git' 'vim' 'zsh' 'which' 'sudo')}
export pkgs=${pkgs#\(}
export pkgs=${pkgs%\)}
export usernr=${usernr:="koray"}
export zsh_theme=${zsh_theme:="kora.zsh-theme"}
if [ $verbose -eq 1 ];then
	echo $newrt
	echo $mntrt
	echo $homef
	echo $rootf
	echo $pkgs
	echo $usernr
	printf "5 seconds timeout, press Control-C to cancel\r"
	sleep 5
fi
if [ $create -eq 1 ];then
	if [ ! -d $newrt ];then
		printf "New root folder doesn't exist, create it [y/n]? "
		read ans
		if [ "$ans" = "y" ];then
			mkdir -p $newrt
		else
		       exit 2
		fi
	fi
	if [ ! -d $mntrt ];then
		printf "New mount folder doesn't exist, create it [y/n]? "
		read ans
		if [ "$ans" = "y" ];then
			mkdir -p $mntrt
		else
			exit 2
		fi
	fi
	pacstrap $newrt base $pkgs
	
	mkdir -p "$newrt/home/$usernr"
	cp -vr $homef/* "$newrt/home/$usernr/"
	cp -vr $homef/.* "$newrt/home/$usernr/"
	cp -vr $rootf/* "$newrt/root/"
	cp -vr $rootf/.* "$newrt/root/"
	cp -vr $script "$newrt/"
	printf "Copying terminfo to $newrt...\n"
	cp -r /usr/share/terminfo $newrt/usr/share/
	printf "Done\n"

	mount --bind "$newrt" "$mntrt"
	arch-chroot $mntrt "/`basename $script`"
	umount --recursive $mntrt
fi
if [ $act -eq 1 ];then
	mount --bind "$newrt" "$mntrt"
	arch-chroot $mntrt /bin/zsh -c "su -l $usernr"
	umount --recursive $mntrt
fi
