#!/bin/bash
# OverTheWire wargames (https://overthewire.org/wargames) helper

printhelp() {
	echo -ne "Usage: $0 [wargame name] [opt]\n";
	echo -ne "  -l\t\tList supported wargames\n"
	echo -ne "  -p PORT\tSpecify the port, it can be used instead of the name or to specify a different port\n";
	echo -ne "  -n NUMBER\tStart from level n"
	echo
	exit 0
}

listwargames() {
	for game in "${!wargames[@]}"; do
		echo "$game"
		#echo "$game (port ${wargames[$game]})"
		#echo "(port ${wargames[$game]}) $game"
	done
	exit 0
}

declare -A wargames
wargames=(
	['bandit']='2220'
	['leviathan']='2223'
	['natas']='none' # http://natasX.natas.labs.overthewire.org where X is the level
	['krypton']='2231'
	['narnia']='2226'
	['behemoth']='2221'
	['utumno']='2227'
	['maze']='2225'
	['vortex']='2228'
	['manpage']='2224'
	['drifter']='2230'
	['formulaone']='2232'
)

OPTS="hlp:n:"

getopt --test
if [ "$?" -eq 4 ];then
	eval set -- "$(getopt --options="$OPTS" --name "$0" -- "$@")"
	# sets $1 to --
fi

while getopts "$OPTS" opt;do #r #per -r (resume)
	case $opt in
		p)wargameport="$OPTARG";;
		h)printhelp;;
		l)listwargames;;
		n)n="$OPTARG";;
		?)exit 2;;
	esac
done
shift $((OPTIND-2))

#if [ "$1" = "--" ] && [ -z "$2" ] || [ -z "$1" ];then

# $1 is --
if [ -z "$2" ];then
	echo "$(basename "$0"): missing wargame argument"
	echo "Try '$(basename "$0") -h' for more information"
	exit 1
fi

wargame="$2"

if [ -z "${wargames[$wargame]}" ];then
	echo "unsupported wargame "$wargame", use -l to have a list of supported wargames"
	exit 5
fi

wargameport="${wargames[$wargame]}"
filepassname="password"
sshkeyname="sshkey"

if [[ "$(basename "$PWD")" =~ $wargame[0-9]+ ]];then
	cd ..
elif ! [ -d "$wargame" ];then
	#echo "creating $wargame folder in current working directory ($PWD)"
	echo "creating $wargame folder and cd'ing to it"
	mkdir -v "$wargame"
	cd "$wargame" || exit 99
elif ! [ "$(basename "$PWD")" = "$wargame" ];then
	cd "$wargame" || exit 99
fi

if [ -z "$n" ];then
	num="$(fd -t f | sort | tail -1 | sed -E "s/$wargame([0-9])+.*/\1/g")"
	if [ -z "$num" ];then
		n=0
	else
		n="$num"
	fi
fi

wargamedomain="$wargame.labs.overthewire.org"
ssh-keyscan "$wargamedomain" >> ~/.ssh/known_hosts
while true; do
	wargameuser="$wargame$n"
	fp="$wargameuser/$filepassname"
	fk="$wargameuser/$sshkeyname"

	if ! [ -f "$fp" ] && ! [ -f "$fk" ];then
		read -rp "type password for $wargameuser: " pass
		if [ -z "$pass" ];then
			echo "no password provided for $wargameuser, exiting"
			exit 4
		fi

		mkdir "$wargameuser"
		echo "$pass" > "$fp"
	fi

	echo -n "connecting to $wargame with user $wargameuser: "
	if [ -f "$fk" ];then
		echo "using sshkey $fk"
		ssh -i "$fk" "$wargameuser@$wargamedomain" -p "$wargameport"
	else
		echo "using password in $fp"
		sshpass -f"$fp" ssh "$wargameuser@$wargamedomain" -p "$wargameport"
	fi

	if [ "$?" -eq 5 ];then
		echo "connection failed, maybe password or sshkey weren't correct"
		exit 5
	fi

	read -n1 -rp "continue to next level/reconnect to current level/quit? [C/r/q]: " cont
	echo
	if [ "$cont" = "q" ];then
		exit 0
	fi

	if ! [ "$cont" = "r" ] || [ "$cont" = "" ];then
		n=$((n+1))
	fi
done





#if [ -z "$1" ];then
#	read -rp "type wargame name: " wargame
#else
#	wargame="$1"
#fi
