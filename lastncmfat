#!/bin/zsh
#old name: "last_added_ncmpcpp_getfattr"
mf="/I/Raccolte/music_files.txt"
md="/I/Raccolte/Musica"
plf="$HOME/.mpd/playlists/lastctime.m3u"
plf_tmp="/tmp/plf_toadd.m3u"
plf_tmp2="/tmp/plf.m3u"
IFS=$'\n'

resume=0
update=0
dry=0
for ar in $@;do
	if [[ ! $ar =~ ^-.* ]];then
		arg=$ar
		break
	fi
done
while getopts uhn opt;do #r #per -r (resume)
	case $opt in
		#r)resume=1;;
		u)update=1;;
		n)dry=1;;
		h)	echo -ne "Usage: $0 [opt]\n";
			#echo -ne "  -n\t\tdon't be verbose (dont't print processed files)\n";
			#echo -ne "  -r \tresume after populating playlist\n";
			echo -ne "  -u \tupdate '$mf'\n";
			exit 0;;
		?)exit 2;;
	esac
done
#if [ "$arg" = "play" ];then
#	update=1
#fi
reorder_album(){
	s=0 # could also use bash substitions, but I prefer this
	s=$(mpc playlist -f "%album% - %title% - %artist%" | nl | grep -P $@ | tail -1 | cut -f1 | sed 's/\s//g')
	s1=$(mpc playlist -f "%album% - %title% - %artist%" | nl | grep -P $@ | head -1 | cut -f1 | sed 's/\s//g')
	if [ $s -eq 0 ];then
		echo "error, needs the position"
	else
		for a in {$((s-$((s-s1))))..$s};do
			mpc move --verbose $s $a # ma --verbose non va
		done
	fi

}

data_cmd=0
if [[ "$(lsblk -o FSTYPE $(df -T "$md" | awk '/\/dev\//{print $1}') | tail -1)" == "ntfs" ]];then
	data_cmd=1
fi
cd "$md"
if [ $update -eq 1 ];then
	echo update
	for a in `find .`;do
		gr=$(grep -F "$a" "$mf")
		#echo $gr
		if [ -n "$gr" ];then
			continue
		else
			echo "adding $a to $mf"
			if [ $data_cmd -eq 1 ];then
				data=$(date -d @$(getfattr --only-values -n system.ntfs_crtime_be "$a" 2>/dev/null | perl -MPOSIX -0777 -ne '$t = unpack("Q>"); print $t/10000000-11644473600') +%Y-%m-%d_%H-%M-%S)
			else
				data=$(date -d "$(stat "$a" | nl | awk '$1 == 8 {print $3,$4}')" +%Y-%m-%d_%H-%M-%S)
			fi
			echo "$data \"$a\"" >> $mf
		fi
	done
fi

printf "csong\n"
echo $arg
if [ "$arg" = "add" ];then
	n=0
	for csong in `cat $mf | sort -nr | awk '!/^#/' | cut -c 1-2 --complement | tr -d '"' | awk '/\.mp3$|\.wav$|\.flac$|\.m4a$/ {print substr($0, 21)}'`;do
		#echo $csong
		is_there=`mpc -f '%file%' playlist | grep -F "$csong"`
		#echo $is_there
		if [ -z "$is_there" ];then
			mpc add "$csong"
			let n++
			mpc move `mpc status | perl -ne 'print "$1\n" if /#[0-9]+\/([0-9]+)/'` $n
			printf "added: $csong\n"
		fi
	done
	exit 0
fi

if [ "$arg" = "play" ];then
	#printf "play\n"
	if [ $dry -eq 0 ];then
		mpc update >/dev/null
		mpc clear >/dev/null
	fi
	pwd
	n=0
	for csong in `cat $mf | sort -nr | awk '!/^#/' | cut -c 1-2 --complement | tr -d '"' | awk '/\.mp3$|\.wav$|\.flac$|\.m4a$/ {print substr($0, 21)}'`;do
		#echo $csong
		if [ $dry -eq 0 ];then
			mpc add "$csong" >/dev/null
		fi
		#grep -F "$csong" "$plf" --color=always
		if [ -z "$(grep -F "$csong" "$plf")" ];then
			echo ${csong} added to "$plf"
			echo "$csong" >> "$plf_tmp"
			echo "echo '$csong' >> '$plf_tmp'"
		fi
		let n++
		if [ $dry -eq 0 ];then
			if [ $n -eq 100 ];then
				mpc random off >/dev/null
				mpc play >/dev/null
			fi
		fi
		printf "\r$n"
	done
	if [ $dry -eq 0 ];then
		if [ -f "$plf_tmp" ];then
			tac "$plf" > "$plf_tmp2"
			echo "tac '$plf' > '$plf_tmp2'"
			tac "$plf_tmp" >> "$plf_tmp2"
			echo "tac '$plf_tmp' >> '$plf_tmp2'"
			tac "$plf_tmp2" > "$plf"
			echo "tac '$plf_tmp2' > '$plf'"
			rm "$plf_tmp" "$plf_tmp2"
		fi
	fi

	reorder_album Caparezza
	reorder_album "Death Parade"
	reorder_album "Kōtarō Nakagawa"
	reorder_album Kiznaiver
	reorder_album "Bakemonogatari OST"
	#reorder_album "Bakemonogatari OST [0-9]" #for only the ost and not op/ed
	reorder_album "Vivy: Fluorite Eye's Song OST [0-9]"
	reorder_album "The Millionaire Detective - Balance: UNLIMITED \(Fugou Keiji: Balance:Unlimited\) OST"
	reorder_album "Akudama Drive OST"
	reorder_album "Saya no Uta Original Soundtrack"
	reorder_album "Wonderful Everyday \(Subarashiki Hibi\) OST"
	#mpc rm "${plf%.*}"
	#mpc save "${plf%.*}"
	printf "\n"
	if [ $dry -eq 0 ];then
		mpc clear >/dev/null
		mpc load "$(basename "${plf%.*}")"
		mpc play >/dev/null
	fi
	exit 0
fi
